// <auto-generated />
using System;
using Cowrk_Space_Mangment_System.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Cowrk_Space_Mangment_System.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20220402111614_ISA")]
    partial class ISA
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.15")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Cowrk_Space_Mangment_System.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Cowrk_Space_Mangment_System.Models.AssignDeals", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClientID")
                        .HasColumnType("int");

                    b.Property<int>("DealID")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("ClientID");

                    b.HasIndex("DealID");

                    b.ToTable("AssignDeals");
                });

            modelBuilder.Entity("Cowrk_Space_Mangment_System.Models.AssignPackage", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AvailableHours")
                        .HasColumnType("int");

                    b.Property<int>("ClientID")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PackageID")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("ClientID");

                    b.HasIndex("PackageID");

                    b.ToTable("AssignPackage");
                });

            modelBuilder.Entity("Cowrk_Space_Mangment_System.Models.Cart", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsClient")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<double>("TotalPrice")
                        .HasColumnType("float");

                    b.HasKey("ID");

                    b.ToTable("Cart");
                });

            modelBuilder.Entity("Cowrk_Space_Mangment_System.Models.CartProducts", b =>
                {
                    b.Property<int>("Cart_Id")
                        .HasColumnType("int");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quentaty")
                        .HasColumnType("int");

                    b.HasKey("Cart_Id", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("CartProducts");
                });

            modelBuilder.Entity("Cowrk_Space_Mangment_System.Models.Chair", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Availability")
                        .HasColumnType("bit");

                    b.Property<int>("Room_ID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Room_ID");

                    b.ToTable("Chair");
                });

            modelBuilder.Entity("Cowrk_Space_Mangment_System.Models.ChairReserve", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Chair_Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("End_Time")
                        .HasColumnType("datetime2");

                    b.Property<int>("Reservation_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Chair_Id");

                    b.HasIndex("Reservation_Id")
                        .IsUnique();

                    b.ToTable("chairReserve");
                });

            modelBuilder.Entity("Cowrk_Space_Mangment_System.Models.Client", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Faculty")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Profession")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QR_Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Client");
                });

            modelBuilder.Entity("Cowrk_Space_Mangment_System.Models.ClientCart", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Cart_Id")
                        .HasColumnType("int");

                    b.Property<int>("Reservation_ID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("Cart_Id");

                    b.HasIndex("Reservation_ID");

                    b.ToTable("clientCart");
                });

            modelBuilder.Entity("Cowrk_Space_Mangment_System.Models.Deal", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("ClassOffer")
                        .HasColumnType("float");

                    b.Property<double>("CoffeeMachineOffer")
                        .HasColumnType("float");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("IndividualOrSharedOffer")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PromoCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("Deal");
                });

            modelBuilder.Entity("Cowrk_Space_Mangment_System.Models.Drink", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("RawProID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ProductId");

                    b.HasIndex("RawProID");

                    b.ToTable("Drink");
                });

            modelBuilder.Entity("Cowrk_Space_Mangment_System.Models.Incomming", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AppuserID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReceptionistAppId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("ShiftCloseCateringIncome")
                        .HasColumnType("float");

                    b.Property<double>("ShiftCloseReservationIncome")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("AppuserID");

                    b.HasIndex("ReceptionistAppId");

                    b.ToTable("Incomming");
                });

            modelBuilder.Entity("Cowrk_Space_Mangment_System.Models.Loging", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("LogOut")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Login")
                        .HasColumnType("datetime2");

                    b.Property<string>("Receptionst_Id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecpetionstAppId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("TotalHours")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RecpetionstAppId");

                    b.ToTable("Loging");
                });

            modelBuilder.Entity("Cowrk_Space_Mangment_System.Models.Outgoing", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<string>("Reciption_ID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ID");

                    b.HasIndex("Reciption_ID");

                    b.ToTable("Outgoing");
                });

            modelBuilder.Entity("Cowrk_Space_Mangment_System.Models.Package", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfDays")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfHours")
                        .HasColumnType("int");

                    b.Property<double>("Offer")
                        .HasColumnType("float");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.HasKey("ID");

                    b.ToTable("Package");
                });

            modelBuilder.Entity("Cowrk_Space_Mangment_System.Models.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ActualAmount")
                        .HasColumnType("int");

                    b.Property<double>("ActualPrice")
                        .HasColumnType("float");

                    b.Property<string>("BarCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ExpireDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("SellingPrice")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("Cowrk_Space_Mangment_System.Models.ProductMovments", b =>
                {
                    b.Property<Guid>("ProductID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OutgoingID")
                        .HasColumnType("int");

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.HasKey("ProductID", "OutgoingID");

                    b.HasIndex("OutgoingID");

                    b.ToTable("ProductMovments");
                });

            modelBuilder.Entity("Cowrk_Space_Mangment_System.Models.RawProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("ActualAmount")
                        .HasColumnType("float");

                    b.Property<DateTime>("ExpireDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("NOC")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<double>("RefrenceCupWeight")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("RawProduct");
                });

            modelBuilder.Entity("Cowrk_Space_Mangment_System.Models.RawProductMovments", b =>
                {
                    b.Property<int>("Raw_ProductID")
                        .HasColumnType("int");

                    b.Property<int>("OutgoingID")
                        .HasColumnType("int");

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.HasKey("Raw_ProductID", "OutgoingID");

                    b.HasIndex("OutgoingID");

                    b.ToTable("RawProductMovments");
                });

            modelBuilder.Entity("Cowrk_Space_Mangment_System.Models.Receptionist", b =>
                {
                    b.Property<string>("AppId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("SalaryPerHour")
                        .HasColumnType("float");

                    b.Property<int>("TotalHours")
                        .HasColumnType("int");

                    b.HasKey("AppId");

                    b.ToTable("Receptionist");
                });

            modelBuilder.Entity("Cowrk_Space_Mangment_System.Models.Reservation", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AppuserID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Cart_ID")
                        .HasColumnType("int");

                    b.Property<int>("Client_ID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("ExpextedHours")
                        .HasColumnType("int");

                    b.Property<double>("Hours_Price")
                        .HasColumnType("float");

                    b.Property<DateTime>("Start_Time")
                        .HasColumnType("datetime2");

                    b.Property<double>("TotalPrice")
                        .HasColumnType("float");

                    b.HasKey("ID");

                    b.HasIndex("AppuserID");

                    b.HasIndex("Cart_ID");

                    b.HasIndex("Client_ID");

                    b.ToTable("Reservation");
                });

            modelBuilder.Entity("Cowrk_Space_Mangment_System.Models.Room", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Room");
                });

            modelBuilder.Entity("Cowrk_Space_Mangment_System.Models.RoomReserve", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("End_Time")
                        .HasColumnType("datetime2");

                    b.Property<int>("Reservation_Id")
                        .HasColumnType("int");

                    b.Property<int>("Rooom_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Reservation_Id");

                    b.HasIndex("Rooom_Id");

                    b.ToTable("RoomReserve");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("Cowrk_Space_Mangment_System.Models.AssignDeals", b =>
                {
                    b.HasOne("Cowrk_Space_Mangment_System.Models.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cowrk_Space_Mangment_System.Models.Deal", "Deal")
                        .WithMany()
                        .HasForeignKey("DealID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Deal");
                });

            modelBuilder.Entity("Cowrk_Space_Mangment_System.Models.AssignPackage", b =>
                {
                    b.HasOne("Cowrk_Space_Mangment_System.Models.Client", "client")
                        .WithMany()
                        .HasForeignKey("ClientID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cowrk_Space_Mangment_System.Models.Package", "package")
                        .WithMany()
                        .HasForeignKey("PackageID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("client");

                    b.Navigation("package");
                });

            modelBuilder.Entity("Cowrk_Space_Mangment_System.Models.CartProducts", b =>
                {
                    b.HasOne("Cowrk_Space_Mangment_System.Models.Cart", "Cart")
                        .WithMany()
                        .HasForeignKey("Cart_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cowrk_Space_Mangment_System.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cart");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Cowrk_Space_Mangment_System.Models.Chair", b =>
                {
                    b.HasOne("Cowrk_Space_Mangment_System.Models.Room", "Room")
                        .WithMany("Chairs")
                        .HasForeignKey("Room_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");
                });

            modelBuilder.Entity("Cowrk_Space_Mangment_System.Models.ChairReserve", b =>
                {
                    b.HasOne("Cowrk_Space_Mangment_System.Models.Chair", "Chair")
                        .WithMany("ChairReserves")
                        .HasForeignKey("Chair_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cowrk_Space_Mangment_System.Models.Reservation", "Reservation")
                        .WithOne("ChairReserves")
                        .HasForeignKey("Cowrk_Space_Mangment_System.Models.ChairReserve", "Reservation_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Chair");

                    b.Navigation("Reservation");
                });

            modelBuilder.Entity("Cowrk_Space_Mangment_System.Models.ClientCart", b =>
                {
                    b.HasOne("Cowrk_Space_Mangment_System.Models.Cart", "Cart")
                        .WithMany()
                        .HasForeignKey("Cart_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cowrk_Space_Mangment_System.Models.Reservation", "Reservation")
                        .WithMany()
                        .HasForeignKey("Reservation_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cart");

                    b.Navigation("Reservation");
                });

            modelBuilder.Entity("Cowrk_Space_Mangment_System.Models.Drink", b =>
                {
                    b.HasOne("Cowrk_Space_Mangment_System.Models.Product", "Product")
                        .WithMany("Drinks")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cowrk_Space_Mangment_System.Models.RawProduct", "RawProduct")
                        .WithMany("Drinks")
                        .HasForeignKey("RawProID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("RawProduct");
                });

            modelBuilder.Entity("Cowrk_Space_Mangment_System.Models.Incomming", b =>
                {
                    b.HasOne("Cowrk_Space_Mangment_System.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("AppuserID");

                    b.HasOne("Cowrk_Space_Mangment_System.Models.Receptionist", null)
                        .WithMany("Incommings")
                        .HasForeignKey("ReceptionistAppId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Cowrk_Space_Mangment_System.Models.Loging", b =>
                {
                    b.HasOne("Cowrk_Space_Mangment_System.Models.Receptionist", "Recpetionst")
                        .WithMany()
                        .HasForeignKey("RecpetionstAppId");

                    b.Navigation("Recpetionst");
                });

            modelBuilder.Entity("Cowrk_Space_Mangment_System.Models.Outgoing", b =>
                {
                    b.HasOne("Cowrk_Space_Mangment_System.Models.ApplicationUser", "Applicationuser")
                        .WithMany()
                        .HasForeignKey("Reciption_ID");

                    b.Navigation("Applicationuser");
                });

            modelBuilder.Entity("Cowrk_Space_Mangment_System.Models.ProductMovments", b =>
                {
                    b.HasOne("Cowrk_Space_Mangment_System.Models.Outgoing", "Outgoing")
                        .WithMany("ProductMovments")
                        .HasForeignKey("OutgoingID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cowrk_Space_Mangment_System.Models.Product", "Product")
                        .WithMany("ProductMovments")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Outgoing");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Cowrk_Space_Mangment_System.Models.RawProductMovments", b =>
                {
                    b.HasOne("Cowrk_Space_Mangment_System.Models.Outgoing", "Outgoing")
                        .WithMany("RawProductMovments")
                        .HasForeignKey("OutgoingID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cowrk_Space_Mangment_System.Models.RawProduct", "RawProduct")
                        .WithMany("RawProductMovments")
                        .HasForeignKey("Raw_ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Outgoing");

                    b.Navigation("RawProduct");
                });

            modelBuilder.Entity("Cowrk_Space_Mangment_System.Models.Receptionist", b =>
                {
                    b.HasOne("Cowrk_Space_Mangment_System.Models.ApplicationUser", "Applicationuser")
                        .WithMany()
                        .HasForeignKey("AppId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Applicationuser");
                });

            modelBuilder.Entity("Cowrk_Space_Mangment_System.Models.Reservation", b =>
                {
                    b.HasOne("Cowrk_Space_Mangment_System.Models.ApplicationUser", "Applicationuser")
                        .WithMany()
                        .HasForeignKey("AppuserID");

                    b.HasOne("Cowrk_Space_Mangment_System.Models.Cart", "Cart")
                        .WithMany()
                        .HasForeignKey("Cart_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cowrk_Space_Mangment_System.Models.Client", "Client")
                        .WithMany("Reservations")
                        .HasForeignKey("Client_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Applicationuser");

                    b.Navigation("Cart");

                    b.Navigation("Client");
                });

            modelBuilder.Entity("Cowrk_Space_Mangment_System.Models.RoomReserve", b =>
                {
                    b.HasOne("Cowrk_Space_Mangment_System.Models.Reservation", "Reservation")
                        .WithMany("RoomReserve")
                        .HasForeignKey("Reservation_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cowrk_Space_Mangment_System.Models.Room", "Room")
                        .WithMany("RoomReserve")
                        .HasForeignKey("Rooom_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Reservation");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Cowrk_Space_Mangment_System.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Cowrk_Space_Mangment_System.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cowrk_Space_Mangment_System.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Cowrk_Space_Mangment_System.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Cowrk_Space_Mangment_System.Models.Chair", b =>
                {
                    b.Navigation("ChairReserves");
                });

            modelBuilder.Entity("Cowrk_Space_Mangment_System.Models.Client", b =>
                {
                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("Cowrk_Space_Mangment_System.Models.Outgoing", b =>
                {
                    b.Navigation("ProductMovments");

                    b.Navigation("RawProductMovments");
                });

            modelBuilder.Entity("Cowrk_Space_Mangment_System.Models.Product", b =>
                {
                    b.Navigation("Drinks");

                    b.Navigation("ProductMovments");
                });

            modelBuilder.Entity("Cowrk_Space_Mangment_System.Models.RawProduct", b =>
                {
                    b.Navigation("Drinks");

                    b.Navigation("RawProductMovments");
                });

            modelBuilder.Entity("Cowrk_Space_Mangment_System.Models.Receptionist", b =>
                {
                    b.Navigation("Incommings");
                });

            modelBuilder.Entity("Cowrk_Space_Mangment_System.Models.Reservation", b =>
                {
                    b.Navigation("ChairReserves");

                    b.Navigation("RoomReserve");
                });

            modelBuilder.Entity("Cowrk_Space_Mangment_System.Models.Room", b =>
                {
                    b.Navigation("Chairs");

                    b.Navigation("RoomReserve");
                });
#pragma warning restore 612, 618
        }
    }
}
